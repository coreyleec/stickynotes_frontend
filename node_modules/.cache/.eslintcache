[{"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/index.js":"1","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/reportWebVitals.js":"2","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/App.js":"3","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/Navbar.js":"4","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/containers/NoteContainer.js":"5","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/Note.js":"6","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/CreateNoteForm.js":"7","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/containers/ReminderContainer.js":"8","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/CreateReminderForm.js":"9","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/Reminder.js":"10","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/containers/ArchiveContainer.js":"11"},{"size":536,"mtime":1622401035778,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1622401035779,"results":"14","hashOfConfig":"13"},{"size":3884,"mtime":1622660234753,"results":"15","hashOfConfig":"13"},{"size":1125,"mtime":1622574186193,"results":"16","hashOfConfig":"13"},{"size":584,"mtime":1622600910893,"results":"17","hashOfConfig":"13"},{"size":2275,"mtime":1622661302925,"results":"18","hashOfConfig":"13"},{"size":1425,"mtime":1622656697459,"results":"19","hashOfConfig":"13"},{"size":710,"mtime":1622658491360,"results":"20","hashOfConfig":"13"},{"size":1544,"mtime":1622658027387,"results":"21","hashOfConfig":"13"},{"size":0,"mtime":1622601504978,"results":"22","hashOfConfig":"13"},{"size":537,"mtime":1622603288983,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"6uxnck",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/index.js",[],["49","50"],"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/reportWebVitals.js",[],"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/App.js",["51"],"\nimport React from 'react'\nimport Navbar from \"../components/Navbar\"\nimport ArchiveContainer from \"../containers/ArchiveContainer\"\nimport NoteContainer from \"../containers/NoteContainer\"\nimport ReminderContainer from \"../containers/ReminderContainer\"\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport { Switch } from \"react-router\";\n\nclass App extends React.Component {\n\n  state = {\n    notes: [],\n    // note: \"\"\n    archived: false,\n   }\n  \n  // GET REQUEST\n   componentDidMount() {\n    fetch('http://localhost:9292/notes/')\n    .then(resp => resp.json())\n    .then(noteData => this.setState({notes: noteData}))\n  }\n\n  // POST REQUEST\n  addNote = (e, noteObj) => {\n  e.preventDefault()\n    let newNote = {\n      title: noteObj.title,\n      datetime: new Date().toLocaleString(),\n      note: noteObj.note,\n      // image: noteObj.image,\n      // archived: false,\n      // details: [],\n    }\n  \n  let reqObj = {}\n  reqObj.headers = {'Content-Type': 'Application/json'}\n  reqObj.method = 'POST'\n  reqObj.body = JSON.stringify(newNote)\n\n  fetch('http://localhost:9292/notes/', reqObj)\n  .then(resp => resp.json())\n  .then(newNoteObj => {\n    this.setState({notes: [newNoteObj, ...this.state.notes]})\n    })\n  }\n\n// PATCH REQUEST (update note)\nupdateNote = (e, updatedNoteText, noteObj) => {\n  e.preventDefault()\n  console.log(updatedNoteText)\n    let updatedNote = {\n      title: noteObj.title,\n      note: updatedNoteText,\n      datetime: noteObj.datetime,\n      // image: noteObj.image,\n      // details: [],\n    }\n\n  let reqObj = {}\n  reqObj.headers = {'Content-Type': 'Application/json'}\n  reqObj.method = 'PATCH'\n  reqObj.body = JSON.stringify(updatedNote)\n  \n  fetch(`http://localhost:9292/notes/${noteObj.id}`, reqObj)\n  .then(resp => resp.json())\n  .then(newNoteObj => {\n    this.setState({notes: [newNoteObj, ...this.state.notes]})\n    })\n  }\n\n// DELETE REQUEST\ndeleteNote = (noteObj) => {\n    let newNotes = this.state.notes.filter(note => note.id !== noteObj.id)\n\n    fetch(`http://localhost:9292/notes/${noteObj.id}`, {method: 'DELETE'})\n    .then(resp => resp.json())\n    .then(() => this.setState({notes: newNotes}))\n  }\n\n// ARCHIVE NOTE\narchiveNote = (archiveData, noteObj) => {\n    \n    // console.log(favoriteData, postObj)  \n\n        \n        let reqObj = {}\n          reqObj.headers = {'Content-Type': 'Application/json'}\n          reqObj.method = 'PATCH'\n\n        noteObj.archived === false \n        ? reqObj.body = JSON.stringify({\n          archived: true }) \n        : reqObj.body = JSON.stringify({\n          archived: false }) \n    \n        fetch(`http://localhost:3000/notes/${noteObj.id}`, reqObj)\n        .then(resp => resp.json())\n        .then(updatedNoteObj => this.setState({\n          notes: this.state.notes.map(note => {\n            if(note.id === updatedNoteObj.id) return updatedNoteObj\n            else return note\n          })\n        }))\n      }\n\n\n\n render() {\n  \n\n  return (\n    <Router>\n    <div>\n        <Navbar  />\n        <br/>\n        {/* <Switch> */}\n        <Route exact path=\"/\" component={() => \n        <NoteContainer  \n        updateNote={this.updateNote} \n        addNote={this.addNote}\n        deleteNote={this.deleteNote}\n        // {this.state.notes.filter(note = note.archived === false) \n        // ? \n        notes={this.state.notes}\n        // : null}\n        />} />\n          \n        <Route exact path=\"/archive\" component={ () => \n        <ArchiveContainer \n        archiveNote={this.archiveNote} \n        deleteNote={this.deleteNote}  \n        notes={this.state.notes}\n        />} />\n\n        <Route exact path=\"/reminders\" component={ () => \n        <ReminderContainer \n        // addReminder={this.addReminder}\n        archiveNote={this.archivedNotes} \n        deleteNote={this.deleteNote}  \n        />} />\n        {/* </Switch> */}\n    </div>\n  </Router>\n  )\n \n    \n    \n  }\n}\nexport default App;\n","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/Navbar.js",[],"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/containers/NoteContainer.js",[],"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/Note.js",[],"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/CreateNoteForm.js",[],"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/containers/ReminderContainer.js",["52"],"import React from 'react'\nimport Reminder from '../components/Reminder'\nimport CreateReminderForm from \"../components/CreateReminderForm\"\n\nclass ReminderContainer extends React.Component{\n    \n    render() {\n    \n        return(\n            <div>\n                <CreateReminderForm addReminder={this.props.addReminder} />\n                \n                \n                {/* {this.props.reminders.map(note =>  */}\n                {/* <Reminder  */}\n                {/* //  updateNote={this.props.updateNote}  \n                //  deleteNote={this.props.deleteNote} \n                //  key={note.id} note={note}\n                 />)} */}\n            </div>\n        )\n    }\n}\n\nexport default ReminderContainer","/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/CreateReminderForm.js",[],"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/Reminder.js",[],"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/containers/ArchiveContainer.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":8,"column":10,"nodeType":"59","messageId":"60","endLine":8,"endColumn":16},{"ruleId":"57","severity":1,"message":"61","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":16},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Reminder' is defined but never used.","no-global-assign","no-unsafe-negation"]