{"ast":null,"code":"var _jsxFileName = \"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/App.js\";\nimport React from 'react';\nimport Navbar from \"../components/Navbar\"; // import FavoritedContainer from \"../containers/FavoritedContainer\"\n\nimport NoteContainer from \"../containers/NoteContainer\"; // import FilteredContainer from \"../containers/FilteredContainer\"\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [] // note: \"\"\n\n    };\n\n    this.addNote = (e, noteObj) => {\n      e.preventDefault();\n      let newNote = {\n        title: noteObj.title,\n        datetime: new Date().toLocaleString(),\n        note: noteObj.note // image: noteObj.image,\n        // archived: false,\n        // details: [],\n\n      };\n      let reqObj = {};\n      reqObj.headers = {\n        'Content-Type': 'Application/json'\n      };\n      reqObj.method = 'POST';\n      reqObj.body = JSON.stringify(newNote);\n      fetch('http://localhost:9292/notes/', reqObj).then(resp => resp.json()).then(newNoteObj => {\n        this.setState({\n          notes: [newNoteObj, ...this.state.notes]\n        });\n      });\n    };\n\n    this.updateNote = (e, updatedNoteText, noteObj) => {\n      e.preventDefault();\n      console.log(updatedNoteText);\n      let updatedNote = {\n        title: noteObj.title,\n        note: updatedNoteText,\n        datetime: noteObj.datetime // image: noteObj.image,\n        // details: [],\n\n      };\n      let reqObj = {};\n      reqObj.headers = {\n        'Content-Type': 'Application/json'\n      };\n      reqObj.method = 'PATCH';\n      reqObj.body = JSON.stringify(updatedNote);\n      fetch(`http://localhost:9292/notes/${noteObj.id}`, reqObj).then(resp => resp.json()).then(newNoteObj => {\n        this.setState({\n          notes: [newNoteObj, ...this.state.notes]\n        });\n      });\n    };\n\n    this.deleteNote = noteObj => {\n      let newNotes = this.state.notes.filter(note => note.id !== noteObj.id);\n      fetch(`http://localhost:9292/notes/${noteObj.id}`, {\n        method: 'DELETE'\n      }).then(resp => resp.json()).then(() => this.setState({\n        notes: newNotes\n      }));\n    };\n\n    this.archiveNote = (archiveData, noteObj) => {\n      // console.log(favoriteData, postObj)  \n      let reqObj = {};\n      reqObj.headers = {\n        'Content-Type': 'Application/json'\n      };\n      reqObj.method = 'PATCH';\n      postObj.archived === false ? reqObj.body = JSON.stringify({\n        archived: true\n      }) : reqObj.body = JSON.stringify({\n        archived: false\n      });\n      fetch(`http://localhost:3000/notes/${noteObj.id}`, reqObj).then(resp => resp.json()).then(updatedNoteObj => this.setState({\n        notes: this.state.posts.map(post => {\n          if (post.id === updatedPostObj.id) return updatedPostObj;else return post;\n        })\n      }));\n    };\n  }\n\n  // GET REQUEST\n  componentDidMount() {\n    fetch('http://localhost:9292/notes/').then(resp => resp.json()).then(noteData => this.setState({\n      notes: noteData\n    }));\n  } // POST REQUEST\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: () => /*#__PURE__*/_jsxDEV(NoteContainer, {\n            updateNote: this.updateNote,\n            addNote: this.addNote,\n            deleteNote: this.deleteNote,\n            notes: this.state.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/filtered\",\n          component: () => /*#__PURE__*/_jsxDEV(FilteredContainer, {\n            archiveNote: this.archivedNotes,\n            deleteNote: this.deleteNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/favorites\",\n          component: () => /*#__PURE__*/_jsxDEV(ReminderContainer // reminderNotes={this.reminderNotes}\n          , {\n            archiveNote: this.archivedNotes,\n            deleteNote: this.deleteNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/App.js"],"names":["React","Navbar","NoteContainer","BrowserRouter","Router","Route","App","Component","state","notes","addNote","e","noteObj","preventDefault","newNote","title","datetime","Date","toLocaleString","note","reqObj","headers","method","body","JSON","stringify","fetch","then","resp","json","newNoteObj","setState","updateNote","updatedNoteText","console","log","updatedNote","id","deleteNote","newNotes","filter","archiveNote","archiveData","postObj","archived","updatedNoteObj","posts","map","post","updatedPostObj","componentDidMount","noteData","render","archivedNotes"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport Navbar from \"../components/Navbar\"\n// import FavoritedContainer from \"../containers/FavoritedContainer\"\nimport NoteContainer from \"../containers/NoteContainer\"\n// import FilteredContainer from \"../containers/FilteredContainer\"\n\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\n\nclass App extends React.Component {\n\n  state = {\n    notes: [],\n    // note: \"\"\n   }\n  \n  // GET REQUEST\n   componentDidMount() {\n    fetch('http://localhost:9292/notes/')\n    .then(resp => resp.json())\n    .then(noteData => this.setState({notes: noteData}))\n  }\n\n  // POST REQUEST\n  addNote = (e, noteObj) => {\n  e.preventDefault()\n    let newNote = {\n      title: noteObj.title,\n      datetime: new Date().toLocaleString(),\n      note: noteObj.note,\n      // image: noteObj.image,\n      // archived: false,\n      // details: [],\n    }\n  \n  let reqObj = {}\n  reqObj.headers = {'Content-Type': 'Application/json'}\n  reqObj.method = 'POST'\n  reqObj.body = JSON.stringify(newNote)\n\n  fetch('http://localhost:9292/notes/', reqObj)\n  .then(resp => resp.json())\n  .then(newNoteObj => {\n    this.setState({notes: [newNoteObj, ...this.state.notes]})\n    })\n  }\n\n// PATCH REQUEST (update note)\nupdateNote = (e, updatedNoteText, noteObj) => {\n  e.preventDefault()\n  console.log(updatedNoteText)\n    let updatedNote = {\n      title: noteObj.title,\n      note: updatedNoteText,\n      datetime: noteObj.datetime,\n      // image: noteObj.image,\n      // details: [],\n    }\n\n  let reqObj = {}\n  reqObj.headers = {'Content-Type': 'Application/json'}\n  reqObj.method = 'PATCH'\n  reqObj.body = JSON.stringify(updatedNote)\n  \n  fetch(`http://localhost:9292/notes/${noteObj.id}`, reqObj)\n  .then(resp => resp.json())\n  .then(newNoteObj => {\n    this.setState({notes: [newNoteObj, ...this.state.notes]})\n    })\n  }\n\n// DELETE REQUEST\ndeleteNote = (noteObj) => {\n    let newNotes = this.state.notes.filter(note => note.id !== noteObj.id)\n\n    fetch(`http://localhost:9292/notes/${noteObj.id}`, {method: 'DELETE'})\n    .then(resp => resp.json())\n    .then(() => this.setState({notes: newNotes}))\n  }\n\n// ARCHIVE NOTE\narchiveNote = (archiveData, noteObj) => {\n    \n    // console.log(favoriteData, postObj)  \n\n        \n        let reqObj = {}\n          reqObj.headers = {'Content-Type': 'Application/json'}\n          reqObj.method = 'PATCH'\n\n        postObj.archived === false \n        ? reqObj.body = JSON.stringify({\n          archived: true }) \n        : reqObj.body = JSON.stringify({\n          archived: false }) \n    \n        fetch(`http://localhost:3000/notes/${noteObj.id}`, reqObj)\n        .then(resp => resp.json())\n        .then(updatedNoteObj => this.setState({\n          notes: this.state.posts.map(post => {\n            if(post.id === updatedPostObj.id) return updatedPostObj\n            else return post\n          })\n        }))\n      }\n\n\n\n render() {\n  \n\n  return (\n    <Router>\n    <div>\n\n        <Navbar  />\n        <br/>\n        <Route exact path=\"/\" component={() => \n        <NoteContainer  \n        updateNote={this.updateNote} \n        addNote={this.addNote}  \n        deleteNote={this.deleteNote} \n        notes={this.state.notes}\n        />} />\n          \n        <Route exact path=\"/filtered\" component={ () => \n        <FilteredContainer \n        archiveNote={this.archivedNotes} \n        deleteNote={this.deleteNote}  \n        />} />\n\n        <Route exact path=\"/favorites\" component={ () => \n        <ReminderContainer \n        // reminderNotes={this.reminderNotes}\n        archiveNote={this.archivedNotes} \n        deleteNote={this.deleteNote}  \n        />} />\n\n    </div>\n  </Router>\n  )\n \n    \n    \n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}