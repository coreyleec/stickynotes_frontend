{"ast":null,"code":"var _jsxFileName = \"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/Note.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Note extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      note: this.props.note.note,\n      edit: false,\n      newNote: \"\"\n    };\n\n    this.toggleEdit = e => {\n      e.preventDefault();\n      this.setState({\n        edit: !this.state.edit\n      });\n    };\n\n    this.toggleOff = e => {\n      debugger;\n      e.target.name !== \"updatedNote\";\n    };\n\n    this.handleUpdatedNote = updatedNote => {\n      this.setState({\n        newNote: updatedNote\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: this.props.note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.deleteNote(this.props.note),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 16\n      }, this), this.state.edit ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.props.updateNote(e, this.state.newNote, this.props.note),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: this.state.note,\n          name: \"updatedNote\" //    value={this.state.updatedNote}\n          ,\n          onChange: e => this.handleUpdatedNote(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: e => this.toggleEdit(e),\n        children: this.state.note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.archiveNote(!this.props.note.archive, this.props.note, this.props.note.archived !== null ? alert(\"Archived!\") : alert(\"Unarchived :(\")),\n          children: \"Archive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.note.datetime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, this.props.note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/Note.js"],"names":["React","Note","Component","state","note","props","edit","newNote","toggleEdit","e","preventDefault","setState","toggleOff","target","name","handleUpdatedNote","updatedNote","render","title","deleteNote","updateNote","value","archiveNote","archive","archived","alert","datetime","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAE7CC,KAF6C,GAErC;AACJC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IAAX,CAAgBA,IADlB;AAEJE,MAAAA,IAAI,EAAE,KAFF;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAFqC;;AAAA,SAU7CC,UAV6C,GAU/BC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;AACC,WAAKC,QAAL,CAAc;AACXL,QAAAA,IAAI,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADP,OAAd;AAGA,KAf4C;;AAAA,SAgB7CM,SAhB6C,GAgBhCH,CAAD,IAAO;AACf;AACAA,MAAAA,CAAC,CAACI,MAAF,CAASC,IAAT,KAAkB,aAAlB;AAEH,KApB4C;;AAAA,SAsBjDC,iBAtBiD,GAsB5BC,WAAD,IAAiB;AACjC,WAAKL,QAAL,CAAc;AACVJ,QAAAA,OAAO,EAAES;AADC,OAAd;AAGH,KA1BgD;AAAA;;AA4B7CC,EAAAA,MAAM,GAAG;AAEN,wBACI;AAA8B,MAAA,SAAS,EAAC,MAAxC;AAAA,8BAEI;AAAA,gCAEA;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,oBAAuB,KAAKZ,KAAL,CAAWD,IAAX,CAAgBc;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAMA;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKb,KAAL,CAAWc,UAAX,CAAsB,KAAKd,KAAL,CAAWD,IAAjC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAcM,KAAKD,KAAL,CAAWG,IAAX,gBACC;AAAM,QAAA,QAAQ,EAAGG,CAAD,IAAM,KAAKJ,KAAL,CAAWe,UAAX,CAAsBX,CAAtB,EAAyB,KAAKN,KAAL,CAAWI,OAApC,EAA6C,KAAKF,KAAL,CAAWD,IAAxD,CAAtB;AAAA,+BACC;AACA,UAAA,IAAI,EAAC,MADL;AAEA,UAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,IAFzB;AAGA,UAAA,IAAI,EAAC,aAHL,CAIH;AAJG;AAKA,UAAA,QAAQ,EAAGK,CAAD,IAAK,KAAKM,iBAAL,CAAuBN,CAAC,CAACI,MAAF,CAASQ,KAAhC;AALf;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,gBAUC;AAAI,QAAA,OAAO,EAAGZ,CAAD,IAAM,KAAKD,UAAL,CAAgBC,CAAhB,CAAnB;AAAA,kBAAwC,KAAKN,KAAL,CAAWC;AAAnD;AAAA;AAAA;AAAA;AAAA,cAxBP,eA2BK;AAAA,gCACA;AAAQ,UAAA,OAAO,EAAE,MAAI,KAAKC,KAAL,CAAWiB,WAAX,CAAuB,CAAC,KAAKjB,KAAL,CAAWD,IAAX,CAAgBmB,OAAxC,EAAiD,KAAKlB,KAAL,CAAWD,IAA5D,EACpB,KAAKC,KAAL,CAAWD,IAAX,CAAgBoB,QAAhB,KAA6B,IAA7B,GAAoCC,KAAK,CAAC,WAAD,CAAzC,GAAyDA,KAAK,CAAC,eAAD,CAD1C,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAGC;AAAA,oBAAI,KAAKpB,KAAL,CAAWD,IAAX,CAAgBsB;AAApB;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BL;AAAA,OAAU,KAAKrB,KAAL,CAAWD,IAAX,CAAgBuB,EAA1B;AAAA;AAAA;AAAA;AAAA,YADJ;AAmCF;;AAjE4C","sourcesContent":["import React from 'react'\n\n\nexport default class Note extends React.Component{\n\n    state = {\n        note: this.props.note.note,\n        edit: false,\n        newNote: \"\",\n    }\n\n\n\n    toggleEdit = (e) => {\n    e.preventDefault()\n     this.setState({\n        edit: !this.state.edit,\n    })\n    }\n    toggleOff = (e) => {\n        debugger\n        e.target.name !== \"updatedNote\" \n        \n    }\n\nhandleUpdatedNote = (updatedNote) => {\n    this.setState({\n        newNote: updatedNote,\n    })\n} \n\n    render() {\n        \n       return(\n           <div key={this.props.note.id} className='note'>\n               \n               <span>\n        {/* NOTE TITLE */}\n               <h3 className='title'>{this.props.note.title}</h3>\n               <br></br>\n\n        {/* DELETE NOTE */}\n               <button onClick={() => this.props.deleteNote(this.props.note)}>X</button>\n               </span>\n\n               {/* <img src={this.props.note.image}></img> */}\n\n        {/* EDIT NOTE */}\n                {this.state.edit \n                ? <form onSubmit={(e)=> this.props.updateNote(e, this.state.newNote, this.props.note)}>\n                   <input \n                   type=\"text\" \n                   defaultValue={this.state.note} \n                   name=\"updatedNote\" \n                //    value={this.state.updatedNote}\n                   onChange={(e)=>this.handleUpdatedNote(e.target.value)}\n                   ></input>\n               </form>\n                : <h4 onClick={(e)=> this.toggleEdit(e)}>{this.state.note}</h4>}\n               {/* onClick everywhere that isn't the form changes state */}\n        {/* ARCHIVE BUTTON AND TIMESTAMP */}\n                <span>\n                <button onClick={()=>this.props.archiveNote(!this.props.note.archive, this.props.note,\n                 this.props.note.archived !== null ? alert(\"Archived!\") : alert(\"Unarchived :(\") )}>Archive</button> \n                 <p>{this.props.note.datetime}</p>\n                 </span>\n           </div>\n       )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}