{"ast":null,"code":"var _jsxFileName = \"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/App.js\";\nimport React from 'react';\nimport Navbar from \"../components/Navbar\"; // import FavoritedContainer from \"../containers/FavoritedContainer\"\n\nimport NoteContainer from \"../containers/NoteContainer\"; // import FilteredContainer from \"../containers/FilteredContainer\"\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [] // note: \"\"\n\n    };\n\n    this.addNote = (e, noteObj) => {\n      e.preventDefault();\n      let newNote = {\n        title: noteObj.title,\n        datetime: new Date().toLocaleString(),\n        note: noteObj.note // image: noteObj.image,\n        // archived: false,\n        // details: [],\n\n      };\n      let reqObj = {};\n      reqObj.headers = {\n        'Content-Type': 'Application/json'\n      };\n      reqObj.method = 'POST';\n      reqObj.body = JSON.stringify(newNote);\n      fetch('http://localhost:9292/notes/', reqObj).then(resp => resp.json()).then(newNoteObj => {\n        this.setState({\n          notes: [newNoteObj, ...this.state.notes]\n        });\n      });\n    };\n\n    this.updateNote = (e, updatedNoteText, noteObj) => {\n      e.preventDefault();\n      console.log(updatedNoteText);\n      let updatedNote = {\n        title: noteObj.title,\n        note: updatedNoteObj.note,\n        dateTime // image: noteObj.image,\n        // details: [],\n\n      }; // let reqObj = {}\n      // reqObj.headers = {'Content-Type': 'Application/json'}\n      // reqObj.method = 'PATCH'\n      // reqObj.body = JSON.stringify(updatedNote)\n      // let exactNote = this.state.notes.map(note => note.id === updatedNoteObj.id)\n      // fetch(`http://localhost:9292/notes/${updatedNoteObj.id}`, reqObj)\n      // .then(resp => resp.json())\n      // .then(newNoteObj => {\n      //   this.setState({notes: [newNoteObj, ...this.state.notes]})\n      //   })\n    };\n\n    this.deleteNote = noteObj => {\n      let newNotes = this.state.notes.filter(note => note.id !== noteObj.id);\n      fetch(`http://localhost:9292/notes/${noteObj.id}`, {\n        method: 'DELETE'\n      }).then(resp => resp.json()).then(() => this.setState({\n        notes: newNotes\n      }));\n    };\n  }\n\n  // GET REQUEST\n  componentDidMount() {\n    fetch('http://localhost:9292/notes/').then(resp => resp.json()).then(noteData => this.setState({\n      notes: noteData\n    }));\n  } // POST REQUEST\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: () => /*#__PURE__*/_jsxDEV(NoteContainer, {\n            updateNote: this.updateNote,\n            addNote: this.addNote,\n            deleteNote: this.deleteNote,\n            notes: this.state.notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/App.js"],"names":["React","Navbar","NoteContainer","BrowserRouter","Router","Route","App","Component","state","notes","addNote","e","noteObj","preventDefault","newNote","title","datetime","Date","toLocaleString","note","reqObj","headers","method","body","JSON","stringify","fetch","then","resp","json","newNoteObj","setState","updateNote","updatedNoteText","console","log","updatedNote","updatedNoteObj","dateTime","deleteNote","newNotes","filter","id","componentDidMount","noteData","render"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport Navbar from \"../components/Navbar\"\n// import FavoritedContainer from \"../containers/FavoritedContainer\"\nimport NoteContainer from \"../containers/NoteContainer\"\n// import FilteredContainer from \"../containers/FilteredContainer\"\n\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\n\nclass App extends React.Component {\n\n  state = {\n    notes: [],\n    // note: \"\"\n   }\n  \n  // GET REQUEST\n   componentDidMount() {\n    fetch('http://localhost:9292/notes/')\n    .then(resp => resp.json())\n    .then(noteData => this.setState({notes: noteData}))\n  }\n\n  // POST REQUEST\n  addNote = (e, noteObj) => {\n  e.preventDefault()\n    let newNote = {\n      title: noteObj.title,\n      datetime: new Date().toLocaleString(),\n      note: noteObj.note,\n      // image: noteObj.image,\n      // archived: false,\n      // details: [],\n    }\n  \n  let reqObj = {}\n  reqObj.headers = {'Content-Type': 'Application/json'}\n  reqObj.method = 'POST'\n  reqObj.body = JSON.stringify(newNote)\n\n  fetch('http://localhost:9292/notes/', reqObj)\n  .then(resp => resp.json())\n  .then(newNoteObj => {\n    this.setState({notes: [newNoteObj, ...this.state.notes]})\n    })\n  }\n\n// PATCH REQUEST (update note)\nupdateNote = (e, updatedNoteText, noteObj) => {\n  e.preventDefault()\n  console.log(updatedNoteText)\n    let updatedNote = {\n      title: noteObj.title,\n      note: updatedNoteObj.note,\n      dateTime\n      // image: noteObj.image,\n      // details: [],\n    }\n\n\n    \n  // let reqObj = {}\n  // reqObj.headers = {'Content-Type': 'Application/json'}\n  // reqObj.method = 'PATCH'\n  // reqObj.body = JSON.stringify(updatedNote)\n\n  // let exactNote = this.state.notes.map(note => note.id === updatedNoteObj.id)\n  \n  // fetch(`http://localhost:9292/notes/${updatedNoteObj.id}`, reqObj)\n  // .then(resp => resp.json())\n  // .then(newNoteObj => {\n  //   this.setState({notes: [newNoteObj, ...this.state.notes]})\n  //   })\n  }\n\n// DELETE REQUEST\ndeleteNote = (noteObj) => {\n    let newNotes = this.state.notes.filter(note => note.id !== noteObj.id)\n\n    fetch(`http://localhost:9292/notes/${noteObj.id}`, {method: 'DELETE'})\n    .then(resp => resp.json())\n    .then(() => this.setState({notes: newNotes}))\n  }\n\n render() {\n  \n\n  return (\n    <Router>\n    <div>\n\n        <Navbar  />\n        <br/>\n        <Route exact path=\"/\" component={() => \n        <NoteContainer  \n        updateNote={this.updateNote} \n        addNote={this.addNote}  \n        deleteNote={this.deleteNote} \n        notes={this.state.notes}/>} />\n          \n    \n    </div>\n  </Router>\n  )\n \n    \n    \n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}