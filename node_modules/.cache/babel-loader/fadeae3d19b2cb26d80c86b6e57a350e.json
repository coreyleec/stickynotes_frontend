{"ast":null,"code":"var _jsxFileName = \"/Users/ryanandrews/Development/Code/Mod3/stickynotes/stickynotes_frontend/src/components/Reminder.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Reminder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reminder_text: this.props.reminder.reminder_text,\n      edit: false,\n      newNote: \"\"\n    };\n\n    this.toggleEdit = e => {\n      e.preventDefault();\n      this.setState({\n        edit: !this.state.edit\n      });\n    };\n\n    this.toggleOff = e => {\n      // debugger\n      console.log(e.target.className);\n\n      if (e.target.className !== this.props.reminder.reminder_text) {\n        return this.setState({\n          edit: !this.state.edit\n        });\n      }\n    };\n\n    this.handleUpdatedReminder = updatedReminder => {\n      this.setState({\n        newReminder: updatedReminder\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => this.toggleOff(e),\n      className: \"reminder\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: this.props.reminder.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.deleteNote(this.props.note),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), this.state.edit ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.props.updateNote(e, this.state.newNote, this.props.note),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: this.state.note //    name=\"updatedNote\" \n          ,\n          className: this.state.note //    value={this.state.updatedNote}\n          ,\n          onChange: e => this.handleUpdatedNote(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: this.state.note,\n        onClick: e => this.toggleEdit(e),\n        children: this.state.note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.archiveNote(!this.props.note.archive, this.props.note, this.props.note.archived !== null ? alert(\"Archived!\") : alert(\"Unarchived :(\")),\n          children: \"Archive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.note.datetime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, this.props.reminder.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Reminder;","map":{"version":3,"sources":["/Users/ryanandrews/Development/Code/Mod3/stickynotes/stickynotes_frontend/src/components/Reminder.js"],"names":["React","Component","Reminder","state","reminder_text","props","reminder","edit","newNote","toggleEdit","e","preventDefault","setState","toggleOff","console","log","target","className","handleUpdatedReminder","updatedReminder","newReminder","render","title","deleteNote","note","updateNote","handleUpdatedNote","value","archiveNote","archive","archived","alert","datetime","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BE,KAD6B,GACrB;AACJC,MAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,aAD/B;AAEJG,MAAAA,IAAI,EAAE,KAFF;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADqB;;AAAA,SAO7BC,UAP6B,GAOfC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AADR,OAAd;AAGH,KAZ4B;;AAAA,SAa7BM,SAb6B,GAahBH,CAAD,IAAO;AACf;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACM,MAAF,CAASC,SAArB;;AACA,UAAIP,CAAC,CAACM,MAAF,CAASC,SAAT,KAAuB,KAAKZ,KAAL,CAAWC,QAAX,CAAoBF,aAA/C,EAA8D;AAC1D,eAAO,KAAKQ,QAAL,CAAc;AACjBL,UAAAA,IAAI,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AADD,SAAd,CAAP;AAGH;AACJ,KArB4B;;AAAA,SAuB7BW,qBAvB6B,GAuBJC,eAAD,IAAqB;AACzC,WAAKP,QAAL,CAAc;AACVQ,QAAAA,WAAW,EAAED;AADH,OAAd;AAGH,KA3B4B;AAAA;;AA6B7BE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,OAAO,EAAGX,CAAD,IAAO,KAAKG,SAAL,CAAeH,CAAf,CAArB;AACiC,MAAA,SAAS,EAAC,UAD3C;AAAA,8BAGI;AAAA,gCAEI;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,oBAAuB,KAAKL,KAAL,CAAWC,QAAX,CAAoBgB;AAA3C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAMI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKjB,KAAL,CAAWkB,UAAX,CAAsB,KAAKlB,KAAL,CAAWmB,IAAjC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAeK,KAAKrB,KAAL,CAAWI,IAAX,gBACK;AAAM,QAAA,QAAQ,EAAGG,CAAD,IAAO,KAAKL,KAAL,CAAWoB,UAAX,CAAsBf,CAAtB,EAAyB,KAAKP,KAAL,CAAWK,OAApC,EAA6C,KAAKH,KAAL,CAAWmB,IAAxD,CAAvB;AAAA,+BACE;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWqB,IAF7B,CAGI;AAHJ;AAII,UAAA,SAAS,EAAE,KAAKrB,KAAL,CAAWqB,IAJ1B,CAKI;AALJ;AAMI,UAAA,QAAQ,EAAGd,CAAD,IAAO,KAAKgB,iBAAL,CAAuBhB,CAAC,CAACM,MAAF,CAASW,KAAhC;AANrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADL,gBAWK;AAAI,QAAA,SAAS,EAAE,KAAKxB,KAAL,CAAWqB,IAA1B;AAAgC,QAAA,OAAO,EAAGd,CAAD,IAAO,KAAKD,UAAL,CAAgBC,CAAhB,CAAhD;AAAA,kBAAqE,KAAKP,KAAL,CAAWqB;AAAhF;AAAA;AAAA;AAAA;AAAA,cA1BV,eA8BI;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKnB,KAAL,CAAWuB,WAAX,CAAuB,CAAC,KAAKvB,KAAL,CAAWmB,IAAX,CAAgBK,OAAxC,EAAiD,KAAKxB,KAAL,CAAWmB,IAA5D,EACnB,KAAKnB,KAAL,CAAWmB,IAAX,CAAgBM,QAAhB,KAA6B,IAA7B,GAAoCC,KAAK,CAAC,WAAD,CAAzC,GAAyDA,KAAK,CAAC,eAAD,CAD3C,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAA,oBAAI,KAAK1B,KAAL,CAAWmB,IAAX,CAAgBQ;AAApB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA,OACS,KAAK3B,KAAL,CAAWC,QAAX,CAAoB2B,EAD7B;AAAA;AAAA;AAAA;AAAA,YADJ;AAsCH;;AApE4B;;AAuEjC,eAAe/B,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Reminder extends Component {\n    state = {\n        reminder_text: this.props.reminder.reminder_text,\n        edit: false,\n        newNote: \"\",\n    }\n\n    toggleEdit = (e) => {\n        e.preventDefault()\n        this.setState({\n            edit: !this.state.edit,\n        })\n    }\n    toggleOff = (e) => {\n        // debugger\n        console.log(e.target.className)\n        if (e.target.className !== this.props.reminder.reminder_text) {\n            return this.setState({\n                edit: !this.state.edit,\n            })\n        }\n    }\n\n    handleUpdatedReminder = (updatedReminder) => {\n        this.setState({\n            newReminder: updatedReminder,\n        })\n    }\n\n    render() {\n        return (\n            <div onClick={(e) => this.toggleOff(e)}\n                key={this.props.reminder.id} className='reminder'>\n\n                <span>\n                    {/* REMINDER TITLE */}\n                    <h3 className='title'>{this.props.reminder.title}</h3>\n                    <br></br>\n\n                    {/* DELETE NOTE */}\n                    <button onClick={() => this.props.deleteNote(this.props.note)}>X</button>\n                </span>\n\n                {/* <img src={this.props.note.image}></img> */}\n\n                {/* EDIT NOTE */}\n                {this.state.edit\n                    ? <form onSubmit={(e) => this.props.updateNote(e, this.state.newNote, this.props.note)}>\n                        <input\n                            type=\"text\"\n                            defaultValue={this.state.note}\n                            //    name=\"updatedNote\" \n                            className={this.state.note}\n                            //    value={this.state.updatedNote}\n                            onChange={(e) => this.handleUpdatedNote(e.target.value)}\n                        ></input>\n                    </form>\n                    : <h4 className={this.state.note} onClick={(e) => this.toggleEdit(e)}>{this.state.note}</h4>}\n\n                {/* onClick everywhere that isn't the form changes state */}\n                {/* ARCHIVE BUTTON AND TIMESTAMP */}\n                <span>\n                    <button onClick={() => this.props.archiveNote(!this.props.note.archive, this.props.note,\n                        this.props.note.archived !== null ? alert(\"Archived!\") : alert(\"Unarchived :(\"))}>Archive</button>\n                    <p>{this.props.note.datetime}</p>\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default Reminder;"]},"metadata":{},"sourceType":"module"}