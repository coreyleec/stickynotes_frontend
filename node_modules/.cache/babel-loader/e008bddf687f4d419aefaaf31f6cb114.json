{"ast":null,"code":"var _jsxFileName = \"/Users/ryanandrews/Development/Code/Mod3/stickynotes/stickynotes_frontend/src/components/Reminder.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Reminder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      reminder_text: this.props.reminder.reminder_text,\n      edit: false,\n      newNote: \"\"\n    };\n\n    this.toggleEdit = e => {\n      e.preventDefault();\n      this.setState({\n        edit: !this.state.edit\n      });\n    };\n\n    this.toggleOff = e => {\n      // debugger\n      console.log(e.target.className);\n\n      if (e.target.className !== this.props.reminder.reminder_text) {\n        return this.setState({\n          edit: !this.state.edit\n        });\n      }\n    };\n\n    this.handleUpdatedReminder = updatedReminder => {\n      this.setState({\n        newReminder: updatedReminder\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Reminder;","map":{"version":3,"sources":["/Users/ryanandrews/Development/Code/Mod3/stickynotes/stickynotes_frontend/src/components/Reminder.js"],"names":["React","Component","Reminder","state","reminder_text","props","reminder","edit","newNote","toggleEdit","e","preventDefault","setState","toggleOff","console","log","target","className","handleUpdatedReminder","updatedReminder","newReminder","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BE,KAD6B,GACrB;AACJC,MAAAA,aAAa,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,aAD/B;AAEJG,MAAAA,IAAI,EAAE,KAFF;AAGJC,MAAAA,OAAO,EAAE;AAHL,KADqB;;AAAA,SAO7BC,UAP6B,GAOfC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AADR,OAAd;AAGH,KAZ4B;;AAAA,SAa7BM,SAb6B,GAahBH,CAAD,IAAO;AACf;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACM,MAAF,CAASC,SAArB;;AACA,UAAIP,CAAC,CAACM,MAAF,CAASC,SAAT,KAAuB,KAAKZ,KAAL,CAAWC,QAAX,CAAoBF,aAA/C,EAA8D;AAC1D,eAAO,KAAKQ,QAAL,CAAc;AACjBL,UAAAA,IAAI,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AADD,SAAd,CAAP;AAGH;AACJ,KArB4B;;AAAA,SAuB7BW,qBAvB6B,GAuBJC,eAAD,IAAqB;AACzC,WAAKP,QAAL,CAAc;AACVQ,QAAAA,WAAW,EAAED;AADH,OAAd;AAGH,KA3B4B;AAAA;;AA6B7BE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnC4B;;AAsCjC,eAAenB,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Reminder extends Component {\n    state = {\n        reminder_text: this.props.reminder.reminder_text,\n        edit: false,\n        newNote: \"\",\n    }\n\n    toggleEdit = (e) => {\n        e.preventDefault()\n        this.setState({\n            edit: !this.state.edit,\n        })\n    }\n    toggleOff = (e) => {\n        // debugger\n        console.log(e.target.className)\n        if (e.target.className !== this.props.reminder.reminder_text) {\n            return this.setState({\n                edit: !this.state.edit,\n            })\n        }\n    }\n\n    handleUpdatedReminder = (updatedReminder) => {\n        this.setState({\n            newReminder: updatedReminder,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n}\n\nexport default Reminder;"]},"metadata":{},"sourceType":"module"}