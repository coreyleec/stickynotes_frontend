{"ast":null,"code":"var _jsxFileName = \"/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/Note.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Note extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      note: this.props.note.note,\n      edit: false,\n      newNote: \"\"\n    };\n\n    this.toggleEdit = e => {\n      e.preventDefault();\n      this.setState({\n        edit: !this.state.edit\n      });\n    };\n\n    this.toggleOff = e => {\n      // debugger\n      console.log(e.target.className);\n      this.state.edit !== false && e.target.className !== \"inputText\" && this.setState({\n        edit: !this.state.edit\n      });\n    };\n\n    this.handleUpdatedNote = updatedNote => {\n      this.setState({\n        newNote: updatedNote\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => this.toggleOff(e),\n      className: \"note\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: this.props.note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.deleteNote(this.props.note),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), this.state.edit ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.props.updateNote(e, this.state.newNote, this.props.note),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: this.state.note //    name=\"updatedNote\" \n          ,\n          className: \"inputText\" //    value={this.state.updatedNote}\n          ,\n          onChange: e => this.handleUpdatedNote(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: this.state.note,\n        onClick: e => this.toggleEdit(e),\n        children: this.state.note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.archiveNote(!this.props.note.archive, this.props.note),\n          children: \"Archive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.props.note.datetime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, this.props.note.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/coreycolligan/Development/phase-3/phase-3-project/frontend/src/components/Note.js"],"names":["React","Note","Component","state","note","props","edit","newNote","toggleEdit","e","preventDefault","setState","toggleOff","console","log","target","className","handleUpdatedNote","updatedNote","render","title","deleteNote","updateNote","value","archiveNote","archive","datetime","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,eAAe,MAAMC,IAAN,SAAmBD,KAAK,CAACE,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAE9CC,KAF8C,GAEtC;AACJC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IAAX,CAAgBA,IADlB;AAEJE,MAAAA,IAAI,EAAE,KAFF;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAFsC;;AAAA,SAU9CC,UAV8C,GAUhCC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADR,OAAd;AAGH,KAf6C;;AAAA,SAiB9CM,SAjB8C,GAiBjCH,CAAD,IAAO;AACf;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACM,MAAF,CAASC,SAArB;AACA,WAAKb,KAAL,CAAWG,IAAX,KAAoB,KAApB,IACOG,CAAC,CAACM,MAAF,CAASC,SAAT,KAAuB,WAD9B,IAEO,KAAKL,QAAL,CAAc;AACbL,QAAAA,IAAI,EAAE,CAAC,KAAKH,KAAL,CAAWG;AADL,OAAd,CAFP;AAKH,KAzB6C;;AAAA,SA2B9CW,iBA3B8C,GA2BzBC,WAAD,IAAiB;AACjC,WAAKP,QAAL,CAAc;AACVJ,QAAAA,OAAO,EAAEW;AADC,OAAd;AAGH,KA/B6C;AAAA;;AAiC9CC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,OAAO,EAAGV,CAAD,IAAO,KAAKG,SAAL,CAAeH,CAAf,CAArB;AAC6B,MAAA,SAAS,EAAC,MADvC;AAAA,8BAGI;AAAA,gCAEI;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,oBAAuB,KAAKJ,KAAL,CAAWD,IAAX,CAAgBgB;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAMI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKf,KAAL,CAAWgB,UAAX,CAAsB,KAAKhB,KAAL,CAAWD,IAAjC,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAeK,KAAKD,KAAL,CAAWG,IAAX,gBACK;AAAM,QAAA,QAAQ,EAAGG,CAAD,IAAO,KAAKJ,KAAL,CAAWiB,UAAX,CAAsBb,CAAtB,EAAyB,KAAKN,KAAL,CAAWI,OAApC,EAA6C,KAAKF,KAAL,CAAWD,IAAxD,CAAvB;AAAA,+BACE;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,IAF7B,CAGI;AAHJ;AAII,UAAA,SAAS,EAAC,WAJd,CAKI;AALJ;AAMI,UAAA,QAAQ,EAAGK,CAAD,IAAO,KAAKQ,iBAAL,CAAuBR,CAAC,CAACM,MAAF,CAASQ,KAAhC;AANrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADL,gBAWK;AAAI,QAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWC,IAA1B;AAAgC,QAAA,OAAO,EAAGK,CAAD,IAAO,KAAKD,UAAL,CAAgBC,CAAhB,CAAhD;AAAA,kBAAqE,KAAKN,KAAL,CAAWC;AAAhF;AAAA;AAAA;AAAA;AAAA,cA1BV,eA8BI;AAAA,gCACI;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWmB,WAAX,CAAuB,CAAC,KAAKnB,KAAL,CAAWD,IAAX,CAAgBqB,OAAxC,EAAiD,KAAKpB,KAAL,CAAWD,IAA5D,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAA,oBAAI,KAAKC,KAAL,CAAWD,IAAX,CAAgBsB;AAApB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA,OACS,KAAKrB,KAAL,CAAWD,IAAX,CAAgBuB,EADzB;AAAA;AAAA;AAAA;AAAA,YADJ;AAsCH;;AAzE6C","sourcesContent":["import React from 'react'\n\n\nexport default class Note extends React.Component {\n\n    state = {\n        note: this.props.note.note,\n        edit: false,\n        newNote: \"\",\n    }\n\n\n\n    toggleEdit = (e) => {\n        e.preventDefault()\n        this.setState({\n            edit: !this.state.edit,\n        })\n    }\n\n    toggleOff = (e) => {\n        // debugger\n        console.log(e.target.className)\n        this.state.edit !== false\n            && e.target.className !== \"inputText\"\n            && this.setState({\n                edit: !this.state.edit,\n            })\n    }\n\n    handleUpdatedNote = (updatedNote) => {\n        this.setState({\n            newNote: updatedNote,\n        })\n    }\n\n    render() {\n\n        return (\n            <div onClick={(e) => this.toggleOff(e)}\n                key={this.props.note.id} className='note'>\n\n                <span>\n                    {/* NOTE TITLE */}\n                    <h3 className='title'>{this.props.note.title}</h3>\n                    <br></br>\n\n                    {/* DELETE NOTE */}\n                    <button onClick={() => this.props.deleteNote(this.props.note)}>X</button>\n                </span>\n\n                {/* <img src={this.props.note.image}></img> */}\n\n                {/* EDIT NOTE */}\n                {this.state.edit\n                    ? <form onSubmit={(e) => this.props.updateNote(e, this.state.newNote, this.props.note)}>\n                        <input\n                            type=\"text\"\n                            defaultValue={this.state.note}\n                            //    name=\"updatedNote\" \n                            className=\"inputText\"\n                            //    value={this.state.updatedNote}\n                            onChange={(e) => this.handleUpdatedNote(e.target.value)}\n                        ></input>\n                    </form>\n                    : <h4 className={this.state.note} onClick={(e) => this.toggleEdit(e)}>{this.state.note}</h4>}\n\n                {/* onClick everywhere that isn't the form changes state */}\n                {/* ARCHIVE BUTTON AND TIMESTAMP */}\n                <span>\n                    <button onClick={() => this.props.archiveNote(!this.props.note.archive, this.props.note,\n                        )}>Archive</button>\n                    <p>{this.props.note.datetime}</p>\n                </span>\n            </div>\n        )\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}